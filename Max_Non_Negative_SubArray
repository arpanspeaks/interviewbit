//https://www.interviewbit.com/problems/max-non-negative-subarray/

vector<int> Solution::maxset(vector<int> &A) {
    int len = A.size();
    long long curr_sum = 0;
    long long max_sum = 0;
    int curr_range_left = 0;
    int curr_range_right = 0;
    int max_range_left = -1;
    int max_range_right = -1;
    while (curr_range_right < len) {
        if (A[curr_range_right] < 0) {
            curr_range_left = curr_range_right+1;
            curr_sum = 0;
        }
        else {
            curr_sum += (long long) A[curr_range_right];
            if (curr_sum > max_sum) {
                max_sum = curr_sum;
                max_range_left = curr_range_left;
                max_range_right = curr_range_right + 1;
            }
            else if (curr_sum == max_sum) {
                if (curr_range_right + 1 - curr_range_left > max_range_right - max_range_left) {
                    max_range_left = curr_range_left;
                    max_range_right = curr_range_right + 1;
                }
            }
        }
        curr_range_right++;
    }
    vector<int> ans;
    if (max_range_left == -1 || max_range_right == -1) return ans;
    for (int i = max_range_left; i < max_range_right; i++) ans.push_back(A[i]);
    return ans;
}
